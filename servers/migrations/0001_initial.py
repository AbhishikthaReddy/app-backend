# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-01-14 14:14
from __future__ import unicode_literals

import django.contrib.postgres.fields.hstore
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EnvironmentResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('cpu', models.IntegerField()),
                ('memory', models.IntegerField()),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField()),
                ('storage_size', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'environment_resources',
            },
        ),
        migrations.CreateModel(
            name='EnvironmentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
                ('image_name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('cmd', models.CharField(blank=True, max_length=512, null=True)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('work_dir', models.CharField(blank=True, max_length=250, null=True)),
                ('env_vars', django.contrib.postgres.fields.hstore.HStoreField(blank=True, null=True)),
                ('container_path', models.CharField(blank=True, max_length=250, null=True)),
                ('container_port', models.IntegerField(blank=True, null=True)),
                ('active', models.BooleanField()),
                ('urldoc', models.CharField(blank=True, max_length=200, null=True)),
                ('type', models.CharField(blank=True, max_length=1, null=True)),
                ('usage', django.contrib.postgres.fields.hstore.HStoreField(blank=True, null=True)),
            ],
            options={
                'db_table': 'environment_type',
            },
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('private_ip', models.CharField(max_length=19)),
                ('public_ip', models.CharField(max_length=19)),
                ('port', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=50)),
                ('container_id', models.CharField(blank=True, max_length=100, null=True)),
                ('volume_path', models.CharField(max_length=200)),
                ('type', models.CharField(blank=True, max_length=1, null=True)),
                ('env_vars', django.contrib.postgres.fields.hstore.HStoreField(blank=True, null=True)),
                ('startup_script', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'servers',
            },
        ),
        migrations.CreateModel(
            name='ServerDataSources',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'server_data_sources',
            },
        ),
        migrations.CreateModel(
            name='ServerRunStatistics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField(blank=True, null=True)),
                ('stop', models.DateTimeField(blank=True, null=True)),
                ('exit_code', models.IntegerField(blank=True, null=True)),
                ('size', models.BigIntegerField(blank=True, null=True)),
                ('stacktrace', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'server_run_statistics',
            },
        ),
        migrations.CreateModel(
            name='ServerStatistics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField(blank=True, null=True)),
                ('stop', models.DateTimeField(blank=True, null=True)),
                ('size', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'server_statistics',
            },
        ),
        migrations.CreateModel(
            name='DataSource',
            fields=[
                ('server', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='servers.Server')),
            ],
            options={
                'db_table': 'data_source',
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('server', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='servers.Server')),
                ('script', models.CharField(max_length=255)),
                ('method', models.CharField(blank=True, max_length=50, null=True)),
                ('auto_restart', models.BooleanField()),
                ('schedule', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'jobs',
            },
        ),
        migrations.CreateModel(
            name='Model',
            fields=[
                ('server', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='servers.Server')),
                ('script', models.CharField(max_length=255)),
                ('method', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'models',
            },
        ),
        migrations.CreateModel(
            name='Workspace',
            fields=[
                ('server', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='servers.Server')),
            ],
            options={
                'db_table': 'workspace',
            },
        ),
        migrations.AddField(
            model_name='serverstatistics',
            name='server',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='servers.Server'),
        ),
        migrations.AddField(
            model_name='serverrunstatistics',
            name='server',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='servers.Server'),
        ),
        migrations.AddField(
            model_name='serverdatasources',
            name='server',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='servers.Server'),
        ),
        migrations.AddField(
            model_name='server',
            name='environment_resources',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='servers.EnvironmentResource'),
        ),
        migrations.AddField(
            model_name='server',
            name='environment_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='servers.EnvironmentType'),
        ),
        migrations.AddField(
            model_name='serverdatasources',
            name='data_source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='servers.DataSource'),
        ),
        migrations.AddField(
            model_name='server',
            name='data_sources',
            field=models.ManyToManyField(related_name='servers', through='servers.ServerDataSources', to='servers.DataSource'),
        ),
        migrations.AlterUniqueTogether(
            name='serverdatasources',
            unique_together=set([('server', 'data_source')]),
        ),
    ]
