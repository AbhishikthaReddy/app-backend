# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-01-31 17:25
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.postgres.fields.hstore
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('projects', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EnvironmentResource',
            fields=[
                ('name', models.CharField(max_length=50, unique=True)),
                ('cpu', models.IntegerField()),
                ('memory', models.IntegerField()),
                ('description', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('active', models.BooleanField()),
                ('storage_size', models.IntegerField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='EnvironmentType',
            fields=[
                ('name', models.CharField(max_length=20, unique=True)),
                ('image_name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('cmd', models.CharField(blank=True, max_length=512)),
                ('description', models.CharField(blank=True, max_length=200)),
                ('work_dir', models.CharField(blank=True, max_length=250)),
                ('env_vars', django.contrib.postgres.fields.hstore.HStoreField(null=True)),
                ('container_path', models.CharField(blank=True, max_length=250)),
                ('container_port', models.IntegerField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('urldoc', models.CharField(blank=True, max_length=200)),
                ('type', models.CharField(blank=True, max_length=1)),
                ('usage', django.contrib.postgres.fields.hstore.HStoreField(null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('private_ip', models.CharField(max_length=19)),
                ('public_ip', models.CharField(max_length=19)),
                ('port', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=50)),
                ('container_id', models.CharField(blank=True, max_length=100)),
                ('type', models.CharField(blank=True, max_length=1)),
                ('env_vars', django.contrib.postgres.fields.hstore.HStoreField(default={})),
                ('startup_script', models.CharField(blank=True, max_length=50)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='ServerRunStatistics',
            fields=[
                ('start', models.DateTimeField(blank=True, null=True)),
                ('stop', models.DateTimeField(blank=True, null=True)),
                ('exit_code', models.IntegerField(blank=True, null=True)),
                ('size', models.BigIntegerField(blank=True, null=True)),
                ('stacktrace', models.TextField(blank=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='ServerStatistics',
            fields=[
                ('start', models.DateTimeField(blank=True, null=True)),
                ('stop', models.DateTimeField(blank=True, null=True)),
                ('size', models.BigIntegerField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='SshTunnel',
            fields=[
                ('name', models.CharField(max_length=50)),
                ('host', models.CharField(max_length=50)),
                ('local_port', models.IntegerField()),
                ('endpoint', models.CharField(max_length=50)),
                ('remote_port', models.IntegerField()),
                ('username', models.CharField(max_length=32)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='DataSource',
            fields=[
                ('server', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='servers.Server')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('server', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='servers.Server')),
                ('script', models.CharField(max_length=255)),
                ('method', models.CharField(blank=True, max_length=50)),
                ('auto_restart', models.BooleanField(default=False)),
                ('schedule', models.CharField(blank=True, max_length=20)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Model',
            fields=[
                ('server', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='servers.Server')),
                ('script', models.CharField(max_length=255)),
                ('method', models.CharField(blank=True, max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Workspace',
            fields=[
                ('server', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='servers.Server')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='sshtunnel',
            name='server',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='servers.Server'),
        ),
        migrations.AddField(
            model_name='serverstatistics',
            name='server',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='servers.Server'),
        ),
        migrations.AddField(
            model_name='serverrunstatistics',
            name='server',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='servers.Server'),
        ),
        migrations.AddField(
            model_name='server',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='servers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='server',
            name='environment_resources',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='servers.EnvironmentResource'),
        ),
        migrations.AddField(
            model_name='server',
            name='environment_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='servers.EnvironmentType'),
        ),
        migrations.AddField(
            model_name='server',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='servers', to='projects.Project'),
        ),
        migrations.AlterUniqueTogether(
            name='sshtunnel',
            unique_together=set([('name', 'server')]),
        ),
        migrations.AddField(
            model_name='server',
            name='data_sources',
            field=models.ManyToManyField(related_name='servers', to='servers.DataSource'),
        ),
    ]
