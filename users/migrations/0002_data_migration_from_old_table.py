# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-01-13 14:14
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0001_initial'),
        ('billing', '0001_initial'),
        ('auth', '0008_alter_user_username_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RunSQL('''
        ALTER TABLE integration
          DROP CONSTRAINT integration_user_id_fkey;
        '''),
        migrations.RunSQL('''
        ALTER TABLE integration
          RENAME COLUMN user_id TO old_user_id;
        '''),
        migrations.RunSQL('''
        ALTER TABLE email
          DROP CONSTRAINT email_user_id_fkey;
        '''),
        migrations.RunSQL('''
        ALTER TABLE email
          RENAME COLUMN user_id TO old_user_id;
        '''),
        migrations.AddField(
            model_name='integration',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL,
                                    null=True),
        ),
        migrations.AddField(
            model_name='email',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emails',
                                    to=settings.AUTH_USER_MODEL, null=True),
        ),
        migrations.RunSQL('''
        UPDATE integration
          SET user_id = old_user_id;
        '''),
        migrations.RunSQL('''
        ALTER TABLE integration DROP COLUMN old_user_id;
        '''),
        migrations.RunSQL('''
        UPDATE email
          SET user_id = old_user_id;
        '''),
        migrations.RunSQL('''
        ALTER TABLE email DROP COLUMN old_user_id;
        '''),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True,
                                              related_name='profile', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('avatar_url', models.CharField(blank=True, max_length=100, null=True)),
                ('bio', models.CharField(blank=True, max_length=400, null=True)),
                ('url', models.CharField(blank=True, max_length=200, null=True)),
                ('email_confirmed', models.BooleanField(default=False)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=120, null=True)),
                ('company', models.CharField(blank=True, max_length=255, null=True)),
                ('current_login_ip', models.CharField(blank=True, max_length=20, null=True)),
                ('last_login_at', models.DateTimeField(blank=True, null=True)),
                ('last_login_ip', models.CharField(blank=True, max_length=20, null=True)),
                ('login_count', models.IntegerField(blank=True, null=True)),
                ('timezone', models.CharField(blank=True, db_column='Timezone', max_length=20, null=True)),
                ('billing_address',
                 models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                      to='billing.BillingAddress')),
                ('billing_plan',
                 models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                      to='billing.BillingPlan')),
            ],
        ),
        migrations.RunSQL('''
        INSERT INTO auth_user (
          id,
          username,
          first_name,
          last_name,
          email,
          date_joined,
          password,
          is_active,
          is_superuser,
          is_staff,
          last_login
        )
          SELECT
            "user".id,
            "user".username,
            coalesce("user".first_name, ''),
            coalesce("user".last_name, ''),
            "user".email,
            "user".created_at,
            concat('bcrypt$', "user".password),
            "user".active,
            CASE WHEN roles_users.role_id = 1 THEN TRUE ELSE FALSE END,
            FALSE,
            "user".current_login_at
          FROM "user" LEFT JOIN roles_users ON "user".id = roles_users.user_id;
        '''),

        migrations.RunSQL('''
        INSERT INTO users_userprofile (
          user_id,
          avatar_url,
          bio,
          url,
          email_confirmed,
          confirmed_at,
          location,
          company,
          billing_address_id,
          billing_plan_id,
          current_login_ip,
          login_count,
          "Timezone"
        )
          SELECT
            auth_user.id,
            "user".avatar_url,
            "user".bio,
            "user".url,
            "user".email_confirmed,
            "user".confirmed_at,
            "user".location,
            "user".company,
            "user".billing_address_id,
            "user".billing_plan_id,
            "user".current_login_ip,
            "user".login_count,
            "user"."Timezone"
          FROM "user" JOIN auth_user ON "user".username = auth_user.username;
        '''),
        migrations.RunSQL('''
        INSERT INTO authtoken_token (key, user_id, created)
          SELECT key, user_id, NOW() FROM token;
        ''')
    ]
